{"version":3,"sources":["../../app/utils/app-utils.js"],"names":["genResponse","_language","_resCode","_devMessage","_data","undefined","responseObj","messageCode","messageRes","resHttpCode","httpCode","error","general","en","message","genToken","s4","genRequestId","Date","format","toUpperCase","isBlank","str","Math","floor","random","toString","substring"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;;;AAJmC;AAM5B,IAAMA,oCAAc,SAAdA,WAAc,GAAgE;AAAA,MAA/DC,SAA+D,uEAAnD,IAAmD;;AAAA,MAA7CC,QAA6C;AAAA,MAAnCC,WAAmC;;AAAA,MAAtBC,KAAsB,uEAAdC,SAAc;;AACzF,MAAIC,oBAAJ;AACA,MAAI;AACF,QAAIC,cAAc,mBAAQL,QAAR,CAAlB;AACA,QAAIM,aAAaD,YAAYN,SAAZ,CAAjB;AACA,QAAIQ,cAAcF,YAAYG,QAA9B;AACAJ,kBAAc,uBAAiBJ,QAAjB,EAA2BM,UAA3B,EAAuCL,WAAvC,EAAoDC,KAApD,EAA2DK,WAA3D,CAAd;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,qBAAOA,KAAP,CAAa,mCAAmCA,KAAhD;AACAL,kBAAc,uBAAiB,WAAjB,EAA8B,oBAAWM,OAAX,CAAmBD,KAAnB,CAAyBE,EAAvD,EAA2DF,MAAMG,OAAjE,EAA0ET,SAA1E,EAAqF,GAArF,CAAd;AACD;AACD,SAAOC,WAAP;AACD,CAZM,C,CALuC;AAmBvC,IAAMS,8BAAW,SAAXA,QAAW,GAAM;AAC5B,SAAOC,OAAOA,IAAP,GAAcA,IAAd,GAAqBA,IAArB,GAA4BA,IAAnC;AACD,CAFM;;AAIA,IAAMC,sCAAe,SAAfA,YAAe,GAAM;AAChC,SAAO,sBAAO,IAAIC,IAAJ,EAAP,EAAmBC,MAAnB,CAA0B,mBAA1B,IAAiDH,KAAKI,WAAL,EAAxD;AACD,CAFM;;AAIA,IAAMC,4BAAU,SAAVA,OAAU,CAACC,GAAD,EAAS;AAC9B,SAAOA,QAAQjB,SAAR,IAAqBiB,QAAQ,IAA7B,IAAqCA,QAAQ,EAApD;AACD,CAFM;;AAIP,IAAMN,KAAK,SAALA,EAAK,GAAM;AACf,SAAOO,KAAKC,KAAL,CAAW,CAAC,IAAID,KAAKE,MAAL,EAAL,IAAsB,OAAjC,EAA0CC,QAA1C,CAAmD,EAAnD,EAAuDC,SAAvD,CAAiE,CAAjE,CAAP;AACD,CAFD","file":"app-utils.js","sourcesContent":["import logger from '../log/logger' //     Load logger\nimport { resCode } from '../common/constants' // Load config (environment)\nimport { MainResponse } from '../response/main.response'\nimport { resMessage } from '../common/message.properties'\nimport moment from \"moment\";\n\nexport const genResponse = (_language = 'en', _resCode, _devMessage, _data = undefined) => {\n  let responseObj;\n  try {\n    let messageCode = resCode[_resCode];\n    let messageRes = messageCode[_language];\n    let resHttpCode = messageCode.httpCode;\n    responseObj = new MainResponse(_resCode, messageRes, _devMessage, _data, resHttpCode)\n  } catch (error) {\n    logger.error('AppUtils Unhandled Exception: ' + error);\n    responseObj = new MainResponse('CM5000000', resMessage.general.error.en, error.message, undefined, 500)\n  }\n  return responseObj\n};\n\nexport const genToken = () => {\n  return s4() + s4() + s4() + s4() + s4()\n};\n\nexport const genRequestId = () => {\n  return moment(new Date()).format('YYYYMMDDHHmmssSSS') + s4().toUpperCase()\n};\n\nexport const isBlank = (str) => {\n  return str === undefined || str === null || str === ''\n};\n\nconst s4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1)\n};\n"]}