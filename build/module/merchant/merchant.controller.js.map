{"version":3,"sources":["../../../app/module/merchant/merchant.controller.js"],"names":["appUtils","service","addMerchant","req","res","logModel","setRequest","info","getAccessLog","response","setResponse","getInfoLog","status","httpCode","send","err","error","genResponse","get","updateMerchant","removeMerchant","getMerchant","getMerchantById"],"mappings":"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","file":"merchant.controller.js","sourcesContent":["import * as appUtils from '../../utils/app-utils'\nimport * as service from './merchant.service'\n\nimport logger from '../../log/logger' // Load logger\nimport loggerAccess from '../../log/logger-access'\nimport loggerInfo from '../../log/logger-info'\n\nimport {LogModel} from '../../log/log.model.js'\n\nexport const addMerchant = (req, res) => {\n  let logModel = new LogModel()\n  logModel.setRequest(req)\n  loggerAccess.info(logModel.getAccessLog())\n  try {\n    service.addMerchant(req, (response) => {\n      logModel.setResponse(response)\n      loggerInfo.info(logModel.getInfoLog())\n      return res.status(response.httpCode).send(response)\n    })\n  } catch (err) {\n    logger.error('addMerchant Unhandled Exception: ' + err)\n    let response = appUtils.genResponse(req.get('dc-language'), 'DC5000000', err)\n    logModel.setResponse(response)\n    loggerInfo.info(logModel.getInfoLog())\n    return res.status(response.httpCode).send(response)\n  }\n}\n\nexport const updateMerchant = (req, res) => {\n  let logModel = new LogModel()\n  logModel.setRequest(req)\n  loggerAccess.info(logModel.getAccessLog())\n  try {\n    service.updateMerchant(req, (response) => {\n      logModel.setResponse(response)\n      loggerInfo.info(logModel.getInfoLog())\n      return res.status(response.httpCode).send(response)\n    })\n  } catch (err) {\n    logger.error('updateMerchant Unhandled Exception: ' + err)\n    let response = appUtils.genResponse(req.get('dc-language'), 'DC5000000', err)\n    logModel.setResponse(response)\n    loggerInfo.info(logModel.getInfoLog())\n    return res.status(response.httpCode).send(response)\n  }\n}\n\nexport const removeMerchant = (req, res) => {\n  let logModel = new LogModel()\n  logModel.setRequest(req)\n  loggerAccess.info(logModel.getAccessLog())\n  try {\n    service.removeMerchant(req, (response) => {\n      logModel.setResponse(response)\n      loggerInfo.info(logModel.getInfoLog())\n      return res.status(response.httpCode).send(response)\n    })\n  } catch (err) {\n    logger.error('removeMerchant Unhandled Exception: ' + err)\n    let response = appUtils.genResponse(req.get('dc-language'), 'DC5000000', err)\n    logModel.setResponse(response)\n    loggerInfo.info(logModel.getInfoLog())\n    return res.status(response.httpCode).send(response)\n  }\n}\n\nexport const getMerchant = (req, res) => {\n  let logModel = new LogModel()\n  logModel.setRequest(req)\n  loggerAccess.info(logModel.getAccessLog())\n  try {\n    service.getMerchant(req, (response) => {\n      logModel.setResponse(response)\n      loggerInfo.info(logModel.getInfoLog())\n      return res.status(response.httpCode).send(response)\n    })\n  } catch (err) {\n    logger.error('getMerchant Unhandled Exception: ' + err)\n    let response = appUtils.genResponse(req.get('dc-language'), 'DC5000000', err)\n    logModel.setResponse(response)\n    loggerInfo.info(logModel.getInfoLog())\n    return res.status(response.httpCode).send(response)\n  }\n}\n\nexport const getMerchantById = (req, res) => {\n  let logModel = new LogModel()\n  logModel.setRequest(req)\n  loggerAccess.info(logModel.getAccessLog())\n  try {\n    service.getMerchantById(req, (response) => {\n      logModel.setResponse(response)\n      loggerInfo.info(logModel.getInfoLog())\n      return res.status(response.httpCode).send(response)\n    })\n  } catch (err) {\n    logger.error('getMerchantById Unhandled Exception: ' + err)\n    let response = appUtils.genResponse(req.get('dc-language'), 'DC5000000', err)\n    logModel.setResponse(response)\n    loggerInfo.info(logModel.getInfoLog())\n    return res.status(response.httpCode).send(response)\n  }\n}\n"]}