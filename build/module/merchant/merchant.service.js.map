{"version":3,"sources":["../../../app/module/merchant/merchant.service.js"],"names":["appUtils","merchantMongoose","addMerchant","req","callback","reqBody","body","updatedDate","Date","createdDate","createdBy","get","updatedBy","err","result","genResponse","message","error","updateMerchant","params","merchantId","removeMerchant","getMerchant","getMerchantById"],"mappings":"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","file":"merchant.service.js","sourcesContent":["import logger from '../../log/logger'\nimport * as appUtils from '../../utils/app-utils'\nimport * as merchantMongoose from './merchant.mongoose'\n\nexport const addMerchant = (req, callback) => {\n  try {\n    let reqBody = req.body;\n    reqBody.updatedDate = new Date();\n    reqBody.createdDate = new Date();\n    reqBody.createdBy = req.get('dc-user-id');\n    reqBody.updatedBy = req.get('dc-user-id');\n    merchantMongoose.addMerchant(req, reqBody, (err, result) => {\n      if (err) {\n        callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err.message))\n      } else {\n        callback(appUtils.genResponse(req.get('dc-language'), 'CM2000000', 'Add merchant success', result))\n      }\n    })\n  } catch (err) {\n    logger.error('service addMerchant Unhandled Exception: ' + err);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err))\n  }\n};\n\nexport const updateMerchant = (req, callback) => {\n  let reqBody = req.body;\n  reqBody.updatedDate = new Date();\n  reqBody.updatedBy = req.get('dc-user-id');\n  try {\n    merchantMongoose.updateMerchant(req, req.params.merchantId, reqBody, (err, result) => {\n      if (err) {\n        callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err.message))\n      } else {\n        callback(appUtils.genResponse(req.get('dc-language'), 'CM2000000', 'Update merchant success', result))\n      }\n    })\n  } catch (err) {\n    logger.error('service updateMerchant Unhandled Exception: ' + err);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err))\n  }\n};\n\nexport const removeMerchant = (req, callback) => {\n  try {\n    merchantMongoose.removeMerchant(req, req.params.merchantId, (err, result) => {\n      if (err) {\n        callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err.message))\n      } else {\n        callback(appUtils.genResponse(req.get('dc-language'), 'CM2000000', 'Remove merchant success', result))\n      }\n    })\n  } catch (err) {\n    logger.error('service removeMerchant Unhandled Exception: ' + err);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err))\n  }\n};\n\nexport const getMerchant = (req, callback) => {\n  try {\n    merchantMongoose.getMerchant(req, (err, result) => {\n      if (err) {\n        callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err.message))\n      } else {\n        callback(appUtils.genResponse(req.get('dc-language'), 'CM2000000', 'Get merchant success', result))\n      }\n    })\n  } catch (err) {\n    logger.error('service getMerchant Unhandled Exception: ' + err);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err))\n  }\n};\n\nexport const getMerchantById = (req, callback) => {\n  try {\n    merchantMongoose.getMerchantById(req, req.params.merchantId, (err, result) => {\n      if (err) {\n        callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err.message))\n      } else {\n        if (result) {\n          callback(appUtils.genResponse(req.get('dc-language'), 'CM2000000', 'Get merchant success', result))\n        } else {\n          callback(appUtils.genResponse(req.get('dc-language'), 'CM4090100', 'Merchant not found'))\n        }\n      }\n    })\n  } catch (err) {\n    logger.error('service getMerchantById Unhandled Exception: ' + err);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err))\n  }\n};\n"]}