{"version":3,"sources":["../../../app/module/user/users.controller.js"],"names":["applicationUtils","service","addUser","req","res","logModel","setRequest","info","getAccessLog","response","setResponse","getInfoLog","status","httpCode","send","err","error","genResponse","get","registerUser","updateUser","removeUser","getUser","getUserById"],"mappings":"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","file":"users.controller.js","sourcesContent":["import * as applicationUtils from '../../utils/app-utils'\nimport * as service from './users.service'\n\nimport logger from '../../log/logger' // Load logger\nimport loggerAccess from '../../log/logger-access'\nimport loggerInfo from '../../log/logger-info'\n\nimport {LogModel} from '../../log/log.model.js'\n\nexport const addUser = (req, res) => {\n  let logModel = new LogModel();\n  logModel.setRequest(req);\n  loggerAccess.info(logModel.getAccessLog());\n  try {\n    service.addUser(req, (response) => {\n      logModel.setResponse(response);\n      loggerInfo.info(logModel.getInfoLog());\n      return res.status(response.httpCode).send(response)\n    })\n  } catch (err) {\n    logger.error('addUser Unhandled Exception: ' + err);\n    let response = applicationUtils.genResponse(req.get('dc-language'), 'DC5000000', err);\n    logModel.setResponse(response);\n    loggerInfo.info(logModel.getInfoLog());\n    return res.status(response.httpCode).send(response)\n  }\n};\n\nexport const registerUser = (req, res) => {\n  let logModel = new LogModel();\n  logModel.setRequest(req);\n  loggerAccess.info(logModel.getAccessLog());\n  try {\n    service.registerUser(req, (response) => {\n      logModel.setResponse(response);\n      loggerInfo.info(logModel.getInfoLog());\n      return res.status(response.httpCode).send(response)\n    })\n  } catch (err) {\n    logger.error('registerUser Unhandled Exception: ' + err);\n    let response = applicationUtils.genResponse(req.get('dc-language'), 'DC5000000', err);\n    logModel.setResponse(response);\n    loggerInfo.info(logModel.getInfoLog());\n    return res.status(response.httpCode).send(response)\n  }\n};\n\nexport const updateUser = (req, res) => {\n  let logModel = new LogModel();\n  logModel.setRequest(req);\n  loggerAccess.info(logModel.getAccessLog());\n  try {\n    service.updateUser(req, (response) => {\n      logModel.setResponse(response);\n      loggerInfo.info(logModel.getInfoLog());\n      return res.status(response.httpCode).send(response)\n    })\n  } catch (err) {\n    logger.error('updateUser Unhandled Exception: ' + err);\n    let response = applicationUtils.genResponse(req.get('dc-language'), 'DC5000000', err);\n    logModel.setResponse(response);\n    loggerInfo.info(logModel.getInfoLog());\n    return res.status(response.httpCode).send(response)\n  }\n};\n\nexport const removeUser = (req, res) => {\n  let logModel = new LogModel();\n  logModel.setRequest(req);\n  loggerAccess.info(logModel.getAccessLog());\n  try {\n    service.removeUser(req, (response) => {\n      logModel.setResponse(response);\n      loggerInfo.info(logModel.getInfoLog());\n      return res.status(response.httpCode).send(response)\n    })\n  } catch (err) {\n    logger.error('removeUser Unhandled Exception: ' + err);\n    let response = applicationUtils.genResponse(req.get('dc-language'), 'DC5000000', err);\n    logModel.setResponse(response);\n    loggerInfo.info(logModel.getInfoLog());\n    return res.status(response.httpCode).send(response)\n  }\n};\n\nexport const getUser = (req, res) => {\n  let logModel = new LogModel();\n  logModel.setRequest(req);\n  loggerAccess.info(logModel.getAccessLog());\n  try {\n    service.getUser(req, (response) => {\n      logModel.setResponse(response);\n      loggerInfo.info(logModel.getInfoLog());\n      return res.status(response.httpCode).send(response)\n    })\n  } catch (err) {\n    logger.error('getUser Unhandled Exception: ' + err);\n    let response = applicationUtils.genResponse(req.get('dc-language'), 'DC5000000', err);\n    logModel.setResponse(response);\n    loggerInfo.info(logModel.getInfoLog());\n    return res.status(response.httpCode).send(response)\n  }\n};\n\nexport const getUserById = (req, res) => {\n  let logModel = new LogModel();\n  logModel.setRequest(req);\n  loggerAccess.info(logModel.getAccessLog());\n  try {\n    service.getUserById(req, (response) => {\n      logModel.setResponse(response);\n      loggerInfo.info(logModel.getInfoLog());\n      return res.status(response.httpCode).send(response)\n    })\n  } catch (err) {\n    logger.error('getUserById Unhandled Exception: ' + err);\n    let response = applicationUtils.genResponse(req.get('dc-language'), 'DC5000000', err);\n    logModel.setResponse(response);\n    loggerInfo.info(logModel.getInfoLog());\n    return res.status(response.httpCode).send(response)\n  }\n};\n"]}