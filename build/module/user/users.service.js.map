{"version":3,"sources":["../../../app/module/user/users.service.js"],"names":["appUtils","usersMongoose","authen","addUser","req","callback","reqBody","body","isBlank","username","password","info","genResponse","get","user","getUserByUsername","updatedDate","Date","createdDate","createdBy","updatedBy","result","err","error","registerUser","status","role","res","checkDuplicateLogin","updateUser","params","userId","removeUser","getUser","getUserById"],"mappings":"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","file":"users.service.js","sourcesContent":["import logger from '../../log/logger'\nimport * as appUtils from '../../utils/app-utils'\nimport * as usersMongoose from './users.mongoose'\nimport * as authen from '../authentication/authentication.service'\n\nexport const addUser = async (req, callback) => {\n  try {\n    let reqBody = req.body;\n    if (!reqBody || appUtils.isBlank(reqBody.username) || appUtils.isBlank(reqBody.password)) {\n      logger.info('Invalid data');\n      callback(appUtils.genResponse(req.get('dc-language'), 'CM4090000', 'Invalid data'))\n    } else {\n      let user = await usersMongoose.getUserByUsername(req, reqBody.username);\n      if (user) {\n        logger.info('User duplicate');\n        callback(appUtils.genResponse(req.get('dc-language'), 'CM4010101', 'User duplicate'))\n      } else {\n        reqBody.updatedDate = new Date();\n        reqBody.createdDate = new Date();\n        reqBody.createdBy = req.get('dc-user-id');\n        reqBody.updatedBy = req.get('dc-user-id');\n        let result = await usersMongoose.addUser(req, reqBody);\n        callback(appUtils.genResponse(req.get('dc-language'), 'CM2000000', 'Add user success', result))\n      }\n    }\n  } catch (err) {\n    logger.error('service addUser Unhandled Exception: ' + err);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err))\n  }\n};\n\nexport const registerUser = async (req, callback) => {\n  try {\n    let reqBody = req.body;\n    if (!reqBody || appUtils.isBlank(reqBody.username) || appUtils.isBlank(reqBody.password)) {\n      logger.info('Invalid data');\n      callback(appUtils.genResponse(req.get('dc-language'), 'CM4090000', 'Invalid data'))\n    } else {\n      let user = await usersMongoose.getUserByUsername(req, reqBody.username);\n      if (user) {\n        logger.info('User duplicate');\n        callback(appUtils.genResponse(req.get('dc-language'), 'CM4010101', 'User duplicate'))\n      } else {\n        reqBody.updatedDate = new Date();\n        reqBody.createdDate = new Date();\n        reqBody.status = \"ACTIVE\";\n        reqBody.role = \"USER\";\n        let user = await usersMongoose.registerUser(req, reqBody);\n        let res = await authen.checkDuplicateLogin(req, reqBody, user);\n        callback(res)\n      }\n    }\n\n  } catch (err) {\n    logger.error('service registerUser Unhandled Exception: ' + err);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err))\n  }\n};\n\nexport const updateUser = async (req, callback) => {\n  let reqBody = req.body;\n  reqBody.updatedDate = new Date();\n  reqBody.updatedBy = req.get('dc-user-id');\n  try {\n    let result = await usersMongoose.updateUser(req, req.params.userId, reqBody);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM2000000', 'Update user success', result))\n  } catch (err) {\n    logger.error('service updateUser Unhandled Exception: ' + err);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err))\n  }\n};\n\nexport const removeUser = async (req, callback) => {\n  try {\n    let result = await usersMongoose.removeUser(req, req.params.userId);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM2000000', 'Remove user success', result))\n  } catch (err) {\n    logger.error('service removeUser Unhandled Exception: ' + err);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err))\n  }\n};\n\nexport const getUser = async (req, callback) => {\n  try {\n    let result = await usersMongoose.getUser(req);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM2000000', 'Get user success', result))\n  } catch (err) {\n    logger.error('service getUser Unhandled Exception: ' + err);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err))\n  }\n};\n\nexport const getUserById = async (req, callback) => {\n  try {\n    let result = await usersMongoose.getUserById(req, req.params.userId);\n    if (result) {\n      callback(appUtils.genResponse(req.get('dc-language'), 'CM2000000', 'Get user success', result))\n    } else {\n      logger.info('User not found');\n      callback(appUtils.genResponse(req.get('dc-language'), 'CM4090100', 'User not found'))\n    }\n  } catch (err) {\n    logger.error('service getUserById Unhandled Exception: ' + err);\n    callback(appUtils.genResponse(req.get('dc-language'), 'CM5000000', err))\n  }\n};\n"]}