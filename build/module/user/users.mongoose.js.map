{"version":3,"sources":["../../../app/module/user/users.mongoose.js"],"names":["addUser","req","user","info","usersData","save","registerUser","updateUser","userId","findByIdAndUpdate","_id","$set","new","getUserById","findById","removeUser","remove","getUser","find","updateLoginStatus","param","update","countLoginFailed","timeToUnlock","updatedDate","Date","unlockLoginStatus","username","getUserByUsername","findOne","toLowerCase","getUserByCriteria","criteria","getUserListByCriteria"],"mappings":"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","file":"users.mongoose.js","sourcesContent":["import logger from '../../log/logger' // Load logger\nimport UsersSchema from './users.model'\n\nexport const addUser = (req, user) => {\n  logger.info('mongoose addUser');\n  let usersData = new UsersSchema(user);\n  return usersData.save()\n};\n\nexport const registerUser = (req, user) => {\n  logger.info('mongoose registerUser');\n  let usersData = new UsersSchema(user);\n  return usersData.save()\n};\n\nexport const updateUser = (req, userId, user) => {\n  logger.info('mongoose updateUser');\n  return UsersSchema.findByIdAndUpdate({_id: userId}, {$set: user}, {new: true})\n};\n\nexport const getUserById = (req, _id) => {\n  logger.info('mongoose getUserById');\n  return UsersSchema.findById(_id, '-password -__v')\n};\n\nexport const removeUser = (req, userId) => {\n  logger.info('mongoose removeUser');\n  return UsersSchema.remove({_id: userId})\n};\n\nexport const getUser = (req) => {\n  logger.info('mongoose getUser');\n  return UsersSchema.find({}, '-password -__v')\n};\n\nexport const updateLoginStatus = (req, param) => {\n  logger.info('mongoose updateLoginStatus');\n  return UsersSchema.update({_id: param._id}, {\n    $set: {\n      countLoginFailed: param.countLoginFailed,\n      timeToUnlock: param.timeToUnlock,\n      updatedDate: new Date()\n    }\n  })\n};\n\nexport const unlockLoginStatus = (req, username) => {\n  logger.info('mongoose unlockLoginStatus');\n  return UsersSchema.update({username: username}, {\n    $set: {\n      countLoginFailed: 0,\n      timeToUnlock: null,\n      updatedDate: new Date()\n    }\n  })\n};\n\n\nexport const getUserByUsername = (req, username) => {\n  logger.info('mongoose getUserByUsername');\n  logger.info('username : ' + username);\n  return UsersSchema.findOne({username: username.toLowerCase()})\n};\n\nexport const getUserByCriteria = (req, criteria) => {\n  logger.info('mongoose getUserByCriteria');\n  return UsersSchema.findOne(criteria, '-password -__v')\n};\n\nexport const getUserListByCriteria = (req, criteria) => {\n  logger.info('mongoose getUserByCriteria');\n  return UsersSchema.find(criteria, '-password -__v')\n};\n"]}